filetype: jsonnet
detect:
    filename: "\\.jsonnet$"
rules:
    - constant: "\\b(self|\\$|super)\\b"
    - constant.bool: "\\b(null|true|false)\\b"
    - identifier: "\\bstd\\.(extVar|thisFile|type|length|objectHas|objectFields|objectHasAll|objectFieldsAll|prune|mapWithKey|abs|sign|max|min|pow|exp|log|exponent|mantissa|floor|ceil|sqrt|sin|cos|tan|asin|acos|atan|mod|assertEqual|toString|codepoint|char|substr|findSubstr|startsWith|endsWith|split|splitLimit|strReplace|asciiUpper|asciiLower|stringChars|format|escapeStringDollars|escapeStringPython|parseInt|parseOctal|parseHex|parseJson|encodeUTF8|decodeUTF8|manifestIni|manifestPython|manifestPythonVars|manifestJsonEx|manifestYamlDoc|manifestYamlStream|manifestXmlJsonml|makeArray|count|find|map|mapWithIndex|filterMap|filter|foldl|foldr|range|join|lines|flattenArrays|sort|uniq|set|setInter|setUnion|setDiff|setMember|base64|base64DecodeBytes|base64Decode|md5|mergePatch|trace)\\b"
    - type: "[_a-zA-Z][_a-zA-Z0-9]*\\s*:"
    - statement: ":"
    - statement: "\\b(assert|else|error|for|function|if|import|importstr|in|local|tailstrict|then)\\b"
    - symbol.operator: "([.;,+*|=!\\%]|<|>|/|-|&)"
    - symbol.brackets: "([(){}]|\\[|\\])"
    - constant.number: "\\b(0|([1-9][0-9]*))(\\.[0-9]+)?([eE][\\+-]?[0-9]+)?\\b"
    - constant.string:
        start: "\""
        end: "\""
        skip: "\\\\\""
        rules:
            - constant.specialChar: "\\\\u[0-9a-fA-F]{4}|\\\\[bfnrt'\"/\\\\]"
    - constant.string:
        start: "'"
        end: "'"
        skip: "\\\\'"
        rules:
            - constant.specialChar: "\\\\u[0-9a-fA-F]{4}|\\\\[bfnrt'\"/\\\\]"
    - constant.string:
        start: "@\""
        end: "\""
        skip: "\\\\\""
        rules:
            - constant.specialChar: "\\\\\""
    - constant.string:
        start: "@'"
        end: "'"
        skip: "\\\\'"
        rules:
            - constant.specialChar: "\\\\'"
    - constant.string:
        start: "\\|\\|\\| *$"
        end: "^ *\\|\\|\\|"
        rules: []
    - comment:
        start: "/\\*"
        end: "\\*/"
        rules:
            - todo: "(TODO|XXX|FIXME):?"
    - comment:
        start: "#|(//)"
        end: "$"
        rules:
            - todo: "(TODO|XXX|FIXME):?"