filetype: fsharp
detect:
    filename: "\\.fs?$"
rules:
    - identifier: "\\b[A-Z][0-9a-z_]{2,}\\b"
    - statement: "\\b(let|val|method|in|and|rec|private|virtual|constraint)\\b"
    - type: "\\b(type|open|class|module|exception|external)\\b"
    - statement: "\\b(fun|function|functor|match|try|with)\\b"
    - statement: "\\b(as|when|of)\\b"
    - statement: "\\b(if|then|else)\\b"
    - type: "\\b(begin|end|object|struct|sig|for|while|do|done|to|downto)\\b"
    - constant.bool: "\\b(true|false)\\b"
    - special: "\\b(include|inherit|initializer)\\b"
    - special: "\\b(new|ref|mutable|lazy|assert|raise)\\b"
    - type: "\\b(base|delegate|downcast|extern|finally|fixed|global|inline|interface|internal|let!|member|namespace|null|override|private|public)\\b"
    - type: "\\b(return|return!|select|static|upcast|use|use!|void|yield|yield!)\\b"
    - constant.string:
        start: "'"
        end: "'"
        skip: "\\\\."
        rules:
            - constant.specialChar: "%."
            - constant.specialChar: "\\\\[abfnrtv'\\\"\\\\]"
            - constant.specialChar: "\\\\([0-7]{3}|x[A-Fa-f0-9]{2}|u[A-Fa-f0-9]{4}|U[A-Fa-f0-9]{8})"
    - constant.string:
        start: "\""
        end: "\""
        skip: "\\\\."
        rules:
            - constant.specialChar: "%."
            - constant.specialChar: "\\\\[abfnrtv'\\\"\\\\]"
            - constant.specialChar: "\\\\([0-7]{3}|x[A-Fa-f0-9]{2}|u[A-Fa-f0-9]{4}|U[A-Fa-f0-9]{8})"
    - comment:
        start: "\\(\\*"
        end: "\\*\\)"
        rules: []